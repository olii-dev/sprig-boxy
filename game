/*
Get the package (box) to Mr. Poptato! (the green thing)
Watch out! Yellow enemies try to take your parcels!
@title: Boxy
@tags: ['classic', 'fun']
@addedOn: 2024-07-05
@author: olii-dev

Instructions:

Use W, A, S, D to move
Hit J to restart the level you're currently on
Hit K to restart to level one (also if you want to play again)
*/

const player = "p";
const box = "b";
const goal = "g";
const wall = "w";
const enemy = "e";

setLegend(
  [player, bitmap`
......FFFF......
......FFFF......
......FFFF......
.....FFFFFF.....
....00000000....
....0......0....
....0.0.0..0....
....0......0....
....0.000..0....
....0......0....
....00000000....
......0..0......
....000..000....
................
................
................`],
  [box, bitmap`
................
................
................
...CCCCC2CCCCC..
...CCCCC2CCCCC..
...CCCCC2CCCCC..
...CCCCC2CCCCC..
...CCCCC2CCCCC..
...22222222222..
...CCCCC2CCCCC..
...CCCCC2CCCCC..
...CCCCC2CCCCC..
...CCCCC2CCCCC..
...CCCCC2CCCCC..
........2.......
................`],
  [goal, bitmap`
................
................
................
....444444......
...44....44.....
...4......4.....
...4.......4....
...4..4.4..4....
...4.......4....
...44.4..4.4....
....4..44..4....
....44....44....
.....444444.....
................
................
................`],
  [wall, bitmap`
LLLLLLLLLLLLLLLL
LL0000000000000L
L0L000000000000L
L00L00000000000L
L000L0000000000L
L0000L000000000L
L00000000000000L
L00000000000000L
L00000000000000L
L00000000000000L
L00000000000000L
L00000000000000L
L00000000000000L
L00000000000000L
L00000000000000L
LLLLLLLLLLLLLLLL`],
  [enemy, bitmap`
................
................
....9999999.....
....9.....9.....
....99...99.....
....9.....9.....
....9999999.....
....9999999.....
....9999999.....
.....9...9......
.....9...9......
.....9...9......
................
................
................
................`],
);

const doom = tune`
125: G4~125 + E4^125 + C4-125 + A4/125,
125: F4~125 + D4^125 + B3-125 + G4/125,
125: E4~125 + C4^125 + A3-125 + F4/125,
125: D4~125 + B3^125 + G3-125 + E4/125,
500`;

const melody = tune`
300: E4~300,
300: G4~300,
300: C5~300,
300: E5~300,
300: G5^300,
300: E5~300,
300: C5~300,
300: G4~300,
300: E4~300,
300: D4~300,
300: F4~300,
300: A4~300,
300: D5^300,
300: A4~300,
300: F4~300,
300: D4~300,
300: E4~300,
300: G4~300,
300: C5~300,
300: E5~300,
300: G5^300,
300: E5~300,
300: C5~300,
300: G4~300,
300: E4~300,
300: D4~300,
300: F4~300,
300: A4~300,
300: D5^300,
300: A4~300,
300: F4~300,
300: D4~300`;


const gameCompleteSound = tune`
500: C5~500 + E5^500 + G5-500,
500: E5~500 + G5^500 + B5-500,
500: G5~500 + B5^500 + D6-500,
1500`;
function shuffleArray(array) {
  for (let i = array.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [array[i], array[j]] = [array[j], array[i]];
  }
}
let playback = playTune(melody, Infinity);

let level = 0;
const levels = [
  map`
e....w..g
.....w..w
.bw.....w
p.w.....w`,
  map`
ww...
pb...
www.e
www..
.....
.....
..www
..www
....g`,
  map`
pwwe..g
.ww....
.b....b
www..wg`,
  map`
...ww..ww
....wb..p
.w..w.www
.w.ew..ww
.w.....ww
gw..wwwww`,
  map`
wwww
....
.bpg
wwww`,
  map`
e...wwwwwwww
g....wwwe...
ww.....w....
www...bw..w.
p.w.w..w..w.
.bw.w.....w.
....w.....w.
....w..wwwwg`,
  map`
wwwwww
.pwgew
.b...w
.....w`,
  map`
ep..w.e
.b..wg.
..w.w..
w......
wwww...`,
  map`
pw.......wg
.w.wwwww.w.
.w....ww.w.
.w.ww.w.bw.
...w..w....
.bgwwww....`,
  map`
wwweww...ew
www.......w
.b...we...w
pww..www..w
wwwwwwww..w
g.........w
wwwwwwwwwww`,
  map`
wwwwwwwwwww
.......wwww
.ewebw.wwww
..w..w.wwww
e.w....wwww
..wgew.w..e
.wwwww.b...
.w..wwew...
.b..wwww...
pwwgwwwg...`,
  map`
wwwwwg..wwwwwwww
ww...w.........g
.b...w..www..www
.ww..w..www.....
..w..w..b.w.ewb.
w.w.......w..w..
p.wwww..eww..www
wwwwwwwwwww..www
g............www`
];

setMap(levels[level]);

setSolids([player, box, wall]);

setPushables({
  [player]: [box],
  [box]: [box]
});

let time = 0;
let timerInterval;
let gameStarted = false;

function formatTime(milliseconds) {
  let seconds = Math.floor(milliseconds / 1000);
  let ms = milliseconds % 1000;
  return `${seconds}.${ms.toString().padStart(3, '0')}s`;
}

function startTimer() {
  timerInterval = setInterval(() => {
    time += 100;
    addText(`Time: ${formatTime(time)}`, { x: 0, y: 0, color: color`2` });
  }, 100);
}

function stopTimer() {
  clearInterval(timerInterval);
}

function startGame() {
  if (!gameStarted) {
    gameStarted = true;
    startTimer();
  }
}

function resetGame() {
  level = 0;
  time = 0;
  gameStarted = false;
  clearText();  
  shuffleArray(levels);

  if (levels.length > 0) {
    setMap(levels[level]);
  } else {
    addText("No levels available!", { x: 1, y: 6, color: color`3` });
  }

  stopTimer();
  playback.end();
  playback = playTune(melody, Infinity);
}

function checkCollision() {
  const playerTile = getFirst(player);
  const enemyTiles = getAll(enemy);

  for (const enemyTile of enemyTiles) {
    if (playerTile.x === enemyTile.x && playerTile.y === enemyTile.y) {
      playTune(doom, 1);
      addText("Ouch!", { x: 8, y: 7, color: color`3` });
      setTimeout(clearText, 1500);
      setMap(levels[level]);
      break;
    }
  }
}

onInput("s", () => {
  startGame();
  getFirst(player).y += 1;
  checkCollision();
})

onInput("d", () => {
  startGame();
  getFirst(player).x += 1;
  checkCollision();
});

onInput("a", () => {
  startGame();
  getFirst(player).x -= 1;
  checkCollision();
});

onInput("w", () => {
  startGame();
  getFirst(player).y -= 1;
  checkCollision();
});

onInput("j", () => {
  if (levels[level] !== undefined) {
    clearText("");
    setMap(levels[level]);
    playback.end();
    playback = playTune(melody, Infinity);
  }
});

onInput("k", () => {
  resetGame();
});

afterInput(() => {
  const targetNumber = tilesWith(goal).length;
  const numberCovered = tilesWith(goal, box).length;

  if (numberCovered === targetNumber) {
    level += 1;

    if (levels[level] !== undefined) {
      setMap(levels[level]);
    } else {
      stopTimer();
      playback.end();
      playTune(gameCompleteSound, 1);
      addText(`      You won!\nYour time: ${formatTime(time)}\n'K' to play again`, { x: 1, y: 6, color: color`3` });
    }
  }
});
